#length of longest sub-sequence
#form an AP
#base requirement-> iterate i and k to find a middle value j
#idea: keep j fixed between [1,n-1], and move i and k such that l[i]+l[k]= 2*l[j]

x=input()
y=list(x.split(','))
#print(y)
z=[int(i) for i in y]
#print(z)
m = len(z)
#print(m)
lst=[]
lst_2=[]
for i in range(m-1):
    for j in range(i+1,m):
        d= z[j]-z[i]
        for k in range(m-2):
            n = z[j]+(k+1)*d
            for h in range(m):
                if z[h]==n:
                    print(n)
                    lst.append(n)
                    a = len(lst)+2
                    print(lst)
                    lst_2.append(a)
    lst.clear()

#print(lst_2)         
print(max(lst_2))
